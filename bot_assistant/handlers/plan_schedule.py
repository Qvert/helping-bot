import datetime

from aiogram.dispatcher import FSMContext
from aiogram.types import Message
from geopy import geocoders
from loguru import logger

from bot_assistant.keyboard import keyboard_plan
from bot_assistant.state_class.class_state import Scheduler_plan
from bot_assistant.utils_.class_error import UncorrectedInputCity


async def welcome_message(message: Message):
    await message.answer(f'–í–∞—Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫\n'
                         f'–ü–µ—Ä–µ–¥ —Ç–µ–º –∫–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –º–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª\n'
                         f'–ù—É–∂–Ω–æ –ø—Ä–æ–≤–µ—Å—Ç–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫—É —á–∞—Å–æ–≤–æ–≥–æ –ø–æ—è—Å–∞')

    await message.answer(f'üõ† –í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥—Ö–æ–¥—è—â—É—é –Ω–∞—Å—Ç—Ä–æ–π–∫—É.\n'
                         f'–ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: +00:00', reply_markup=keyboard_plan)


async def get_button_text_city(message: Message):
    await message.answer('–í–≤–µ–¥–∏—Ç–µ –≥–æ—Ä–æ–¥ –≤ –∫–æ—Ç–æ—Ä–æ–º –ø—Ä–æ–∂–∏–≤–∞–µ—Ç–µ –∏–ª–∏ –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å —Ä—è–¥–æ–º —Å –Ω–∏–º')
    await Scheduler_plan.get_name_city.set()


async def city_input_user(message: Message, state: FSMContext):
    try:
        city_or_country = message.text
        g = geocoders.GoogleV3()
        place, (lat, lng) = g.geocode(city_or_country)
        timezone = g.timezone((lat, lng))

    except UncorrectedInputCity as err:
        await message.reply('–í–≤–µ–¥–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ –∏–ª–∏ –Ω–∞—Å–µ–ª—ë–Ω–Ω–æ–≥–æ –ø—É–Ω–∫—Ç–∞')
        logger.error(err)


async def get_button_text_time_zone(message: Message):
    await message.answer('–í–≤–µ–¥–∏—Ç–µ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ —Å–≤–æ–π —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å –≤ —Ñ–æ—Ä–º–∞—Ç–µ: ¬±HH:MM')

