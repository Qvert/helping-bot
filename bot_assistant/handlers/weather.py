from string import Template
import os

import pyowm.commons.exceptions
from aiogram.dispatcher import FSMContext
from aiogram.types import Message
from pyowm import OWM
from loguru import logger

from bot_assistant.state_class.class_state import Weather
from bot_assistant.keyboard import keyboard_cancel


async def weather(message: Message) -> None:
    """
    :param message: Message
    :return: –í—Ö–æ–¥ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤–æ–ø—Ä–æ—Å–∞ –Ω–∞—Å–µ–ª—ë–Ω–Ω–æ–≥–æ –ø—É–Ω–∫—Ç–∞
    """
    await message.answer('–¢–µ–ø–µ—Ä—å –º–æ–∂–µ—à—å –º–Ω–µ —Å–∫–∞–∑–∞—Ç—åüó£Ô∏è –≤ –∫–∞–∫–æ–º –º–µ—Å—Ç–µ –Ω—É–∂–Ω–æ —É–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É ‚òÅÔ∏è',
                         reply_markup=keyboard_cancel)
    await Weather.get_weather_place.set()


async def get_weather_text(message: Message, state: FSMContext):
    """
    :param message: Message
    :param state: FSMContext
    :return: –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–≥–æ–¥—ã –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    """
    weather_place = message.text
    try:
        owm = OWM(os.environ['TOKEN_OWM'])
        mgr = owm.weather_manager().weather_at_place(weather_place).weather
        stroke = Template('–í–æ—Ç —á—Ç–æ –º–Ω–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏\n\n'
                          '–°–µ–π—á–∞—Å –≤ $place:\n'
                          'üå° –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞:\n'
                          '    –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è: $temp_max ¬∞C\n'
                          '    –°—Ä–µ–¥–Ω—è—è: $temp ¬∞C\n'
                          '    –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è: $temp_min ¬∞C\n'
                          'üí® –°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞: $wind –º/c\n'
                          'üåß –í–ª–∞–∂–Ω–æ—Å—Ç—å: $hum%\n'
                          '')\
            .safe_substitute(place=weather_place, temp=mgr.temperature('celsius')['temp'],
                             temp_max=mgr.temperature('celsius')['temp_max'],
                             temp_min=mgr.temperature('celsius')['temp_min'],
                             wind=mgr.wind()['speed'],
                             hum=mgr.humidity)

        await message.answer(stroke)

    except pyowm.commons.exceptions.NotFoundError as err:
        await message.reply('–ù–µ –º–æ–≥—É —Ä–∞–∑–æ–±—Ä–∞—Ç—å üßê –Ω–∞–ø–∏—à–∏ –ø–æ–Ω—è—Ç–Ω–µ–µ üñäÔ∏è')
        logger.error(err)

    await state.finish()

